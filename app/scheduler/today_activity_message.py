from database.repositories import getUsersTodayActivity, changeErrorUserStatus
from aiogram import Bot
from aiogram.enums.parse_mode import ParseMode



async def sendTodayActivity(bot: Bot):
    # –û—Ç—Ä–∏–º—É—î–º–æ —Å–ª–æ–≤–Ω–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç–∞ —ó—Ö –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö –∑–≤–∏—á–æ–∫/–∑–∞–≤–¥–∞–Ω—å
    users_activity_dict = await getUsersTodayActivity()

    counter = 0
    error_counter = 0

    for tg_id, activity in users_activity_dict.items():
        habits = activity.get("habits", [])
        tasks = activity.get("tasks", [])

        # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        message_parts = []

        if habits:
            habit_list = "\n".join([f"‚ñ´Ô∏è <b>{habit.name}</b>" for habit in habits])
            message_parts.append(f"üî• Habits to complete:\n{habit_list}")

        if tasks:
            task_list = "\n".join([f"‚ñ™Ô∏è <b>{task.task}</b>" for task in tasks])
            message_parts.append(f"üéØ Tasks to complete:\n{task_list}")

        # –Ø–∫—â–æ –Ω–µ–º–∞—î –Ω—ñ –∑–≤–∏—á–æ–∫, –Ω—ñ –∑–∞–≤–¥–∞–Ω—å, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        if not message_parts:
            continue

        # –û–±'—î–¥–Ω—É—î–º–æ –≤—Å—ñ —á–∞—Å—Ç–∏–Ω–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        message_text = "\n\n".join(message_parts)

        try:
            # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            await bot.send_message(
                chat_id=tg_id,
                text=message_text,
                parse_mode=ParseMode.HTML
            )

            counter += 1

        except:
            await changeErrorUserStatus(tg_id)
            error_counter += 1

    print(f"–í—Ä–∞–Ω—Ü—ñ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ {counter} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º\n–ü–æ–º–∏–ª–∫–∏ —É {error_counter} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤")



def schedulerTodayActivity(scheduler, bot: Bot):
    try:
        scheduler.add_job(sendTodayActivity, "cron", hour = 8, minute = 0, args = [bot])
    except Exception as e:
        print(e)
