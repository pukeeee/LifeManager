from database.repositories import getUsersWithIncompletedHabits, changeErrorUserStatus
from aiogram import Bot
from aiogram.enums.parse_mode import ParseMode



async def sendIncompletedHabits(bot: Bot):
    users_habits_dict = await getUsersWithIncompletedHabits()  # –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫
    
    counter = 0
    error_counter = 0
    
    for tg_id, habits in users_habits_dict.items():
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫
        habit_list = "\n".join([f"‚ñ´Ô∏è <b>{habit.name}</b>" for habit in habits])
        message_text = f"üî• Don't forget to do your habits today:\n\n{habit_list}"
        
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.send_message(
                chat_id=tg_id,
                text=message_text,
                parse_mode=ParseMode.HTML
            )
            counter += 1
            
        except:
            await changeErrorUserStatus(tg_id)
            error_counter += 1
    
    print(f"\n\n\n\n–í–µ—á–µ—Ä–æ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã {counter} —é–∑–µ—Ä–∞–º\n\n–û—à–∏–±–∫–∏ —É {error_counter} —é–∑–µ—Ä–æ–≤\n\n\n\n")



def schedulerIncompletedHabits(scheduler, bot: Bot):
    try:
        scheduler.add_job(sendIncompletedHabits, "cron", hour = 20, minute = 0, args = [bot])
    except Exception as e:
        print(e)