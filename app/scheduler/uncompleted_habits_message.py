from database.repositories import getUsersWithIncompletedHabits, changeErrorUserStatus
from aiogram import Bot
from aiogram.enums.parse_mode import ParseMode



async def sendIncompletedHabits(bot: Bot):
    users_habits_dict = await getUsersWithIncompletedHabits()  # –û—Ç—Ä–∏–º—É—î–º–æ —Å–ª–æ–≤–Ω–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç–∞ —ó—Ö –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö –∑–≤–∏—á–æ–∫

    counter = 0
    error_counter = 0

    for tg_id, habits in users_habits_dict.items():
        # –§–æ—Ä–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö –∑–≤–∏—á–æ–∫
        habit_list = "\n".join([f"‚ñ´Ô∏è <b>{habit.name}</b>" for habit in habits])
        message_text = f"üî• Don't forget to do your habits today:\n\n{habit_list}"

        try:
            # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            await bot.send_message(
                chat_id=tg_id,
                text=message_text,
                parse_mode=ParseMode.HTML
            )
            counter += 1

        except:
            await changeErrorUserStatus(tg_id)
            error_counter += 1

    print(f"\n\n\n\n–í–≤–µ—á–µ—Ä—ñ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ {counter} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º\n\n–ü–æ–º–∏–ª–∫–∏ —É {error_counter} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤\n\n\n\n")



def schedulerIncompletedHabits(scheduler, bot: Bot):
    try:
        scheduler.add_job(sendIncompletedHabits, "cron", hour = 20, minute = 0, args = [bot])
    except Exception as e:
        print(e)
